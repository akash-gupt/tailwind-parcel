{"id":"../../node_modules/lodash/tap.js","dependencies":[{"name":"/Users/akashgupta/Projects/learning/tailwind-parcel/package.json","includedInParent":true,"mtime":1588070820952},{"name":"/Users/akashgupta/Projects/learning/tailwind-parcel/node_modules/lodash/package.json","includedInParent":true,"mtime":1572546658555}],"generated":{"js":"/**\n * This method invokes `interceptor` and returns `value`. The interceptor\n * is invoked with one argument; (value). The purpose of this method is to\n * \"tap into\" a method chain sequence in order to modify intermediate results.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3])\n *  .tap(function(array) {\n *    // Mutate input array.\n *    array.pop();\n *  })\n *  .reverse()\n *  .value();\n * // => [2, 1]\n */\nfunction tap(value, interceptor) {\n  interceptor(value);\n  return value;\n}\n\nmodule.exports = tap;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/lodash/tap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/lodash/tap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../../node_modules/lodash/tap.js":"/**\n * This method invokes `interceptor` and returns `value`. The interceptor\n * is invoked with one argument; (value). The purpose of this method is to\n * \"tap into\" a method chain sequence in order to modify intermediate results.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3])\n *  .tap(function(array) {\n *    // Mutate input array.\n *    array.pop();\n *  })\n *  .reverse()\n *  .value();\n * // => [2, 1]\n */\nfunction tap(value, interceptor) {\n  interceptor(value);\n  return value;\n}\n\nmodule.exports = tap;\n"},"lineCount":30}},"error":null,"hash":"8d59d547218d44126e05a01e8e3290da","cacheData":{"env":{}}}